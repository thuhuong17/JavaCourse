---------------------------CÁC CÂU LỆNH ĐIỀU KIỆN ------------------
1. Mệnh đề if-else
2. Kiểm tra chuỗi tên bằng nhau
- Không dùng == để so sánh trong String
- Sử dụng equal() để so sánh
vd 
Scanner sc = new Scanner(System.in);
		String a = sc.nextLine();
		String b = sc.nextLine();
		if(a.equals(b)) {
			System.out.println("A is equal to B");
		}
		if (a == b) {
			System.out.println("A == B");
		}
3. Kiểm tra số nào lớn nhất trong 3 số nguyên đã nhập 
Scanner sc = new Scanner(System.in);
		int a = sc.nextInt();
		int b = sc.nextInt();
		int c = sc.nextInt();
		if(a>=b && a>=c)
		{
			System.out.println(a);
		}
		if(b>=a && b>=c)
		{
			System.out.println(b);
		}
		if(c>=a && c>=b)
		{
			System.out.println(c);
		}
4. Kiểm tra 3 số nguyên nhập vào tạo thành dãy số tăng dần hay giảm dần
Scanner sc = new Scanner(System.in);
		int a = sc.nextInt();
		int b = sc.nextInt();
		int c = sc.nextInt();
		if(a<=b && b<=c)
				System.out.println("increasing");
		else if(a>=b && b>=c)	
				System.out.println("decreasing");
		else
			System.out.println("neither increasing nor decreasing order");
 5. if -> else if ->else
 ----------------------------------VÒNG LẶP-------------------
 1. Cấu trúc vòng lặp for:
 for (int i = 1; i <= n; i++) {
	System.out.print(i + " ");
}
Giải thích: 
Bước 1. Tạo ra biến i kiểu nguyên và gán giá trị cho i = 1
Bước 2. Nếu i <= 5 thì thực hiện khối lệnh bên trong vòng for (chính là đoạn code System.out.print(i + " ");). Ngược lại nếu i <= 5 là false thì dừng không chạy tiếp bước 3.
Bước 3. Tăng i lên 1 đơn vị và quay lại bước 2 (i++ tương đương với i = i + 1 hoặc i += 1).
2. hiển thị các số từ n về -n.
Scanner sc = new Scanner(System.in);
int n = sc.nextInt();
for(int i = n; i>=-n;i--)
{
	System.out.print(i+ " ");
}
3. Bạn hãy viết chương trình nhập từ bàn phím số nguyên n và hiển thị ra màn hình n! (n giai thừa).
Scanner sc = new Scanner(System.in);
int n = sc.nextInt();
int sum=1;
for(int i =1; i<=n;i++)
{
	sum *=i;
}
System.out.print(sum);
4. Bạn hãy viết chương trình nhập từ bàn phím một số nguyên n và hiển thị ra màn hình các ước của n (n > 0).
for(int i =1; i<=n;i++)
{
	if(n%i==0)
	{
		System.out.print(i+ " ");
	}
}
5. Bạn hãy viết chương trình hiển thị ra màn hình các số từ 0 tới 24 giống như sau:
0 1 2 3 4 
5 6 7 8 9 
10 11 12 13 14 
15 16 17 18 19 
20 21 22 23 24 
vd 
int count =0;
for (int i = 0; i < 5; i++) 
{
	for (int j = 0; j < 5; j++) 
	{
		System.out.print( count +" ");
		count+=1;
	}
	System.out.println();
}
------------------------------Vòng lặp: while và do-while-------------------
1. Cấu trúc While:
int n;
while (n<=100){
    // Nếu biểu thức đúng thì thực hiện đoạn code trong khối lệnh này
    n++;
}
2. Bạn hãy viết chương trình nhập vào bàn phím số nguyên n và hiển thị ra các số chẵn từ n tới 100.
Scanner sc = new Scanner(System.in);
int n = sc.nextInt();
while(n <= 100) 
{
	if(n%2==0)
	{
		System.out.print(n + " ");
	}
	n++;
}
3. Bạn hãy viết chương trình nhập từ bàn phím số nguyên n và hiển thị ra màn hình số các ước số của n.
for:		
		int count=0;
		for(int i =1; i<=n;i++)
		{
			if(n%i==0)
			{
				count++;
			}
		}
		System.out.print(count);
4. Bạn hãy viết chương trình nhập từ bàn phím hai số nguyên dương a và b. Sau đó hiển thị ra màn hình kết quả của a^b
while: 
		int a = sc.nextInt();
		int b = sc.nextInt();
		int result=1;
		for(; b>0;b--)
		{
			result*=a;
		}
		System.out.print(result);
5. Cách sử dụng break;
6. Cách sử dụng continue;
Khi gặp câu lệnh continue trong vòng lặp, các đoạn code bên dưới câu lênh này trong vòng lặp sẽ không được thực thi.
vd 			for (int i = 1; i <= 100; i++) {
			if(i%2==0)
			{
				continue;
			}
			System.out.print(i + " ");
			}
7. CẤU trúc vòng lặp do-while
do {
	// Khối lệnh
} while (biểu_thức);

Đầu tiên khối lệnh bên trong vòng lặp do-while sẽ được thực thi trước. Sau đó vòng lặp do-while sẽ kiểm tra biểu thức điều kiện, nếu biểu thức điều kiện đúng thì chương trình sẽ tiếp tục thực thi khối lệnh trong do-while, ngược lại nếu biểu thức điều kiện sai thì dừng vòng lặp.
8. Sự khác nhau giữa while và do-while
- vòng lặp while: sẽ kiểm tra điều kiện trước
- vòng lặp do-while: sẽ thực hiện khối lệnh trước 
=>nên khối lệnh trong do-while sẽ được thực thi ít nhất 1 lần.









 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
